#:kivy 1.10.0
#:import math math
#:import screen_transition kivy.uix.screenmanager.SwapTransition

<ClockProgram>:
    # <programmatic name>: <kv name>
    bgimage: aimg
    clocklabel: clocklbl
    image1: img1
    image2: img2
    image3: img3
    effWid: eff
    menu: menu
    screen_manager: screen_manager

    # background image
    EffectWidget:
        id: eff
        size: root.size

        AsyncTouchImage:
            id: aimg
            size: root.size

            canvas:
                Rectangle:
                    texture: self.texture
                    # fix for auto-scaling image
                    size: max(root.width, root.height * self.image_ratio), max(root.height, root.width / self.image_ratio)

    ScreenManager:
        id: screen_manager
        transition: screen_transition()
        size: root.size

        MainScreen:
            id: main_screen
            name: "main"
            manager: "screen_manager"
            size: root.size

            # clock label
            CustomLabel:
                id: clocklbl
                font_size: float(app.config.get("main_screen", "font_size"))
                text: root.curtime
                center_x: root.center_x

                # fix for label text overlapping bounds
                size_hint: (None, None)
                text_size: None, None
                size: self.texture_size
                pos_hint: {"center_y" : .5}

            # bottom menu
            FloatLayout:
                id: menu
                size: root.width, root.height/10
                size_hint: (None, 1/10)

                MenuButton:
                    pos_hint: {"x": 1/8, "y": 0}
                    height: self.parent.height
                    on_press: self.menuButtonPressed("pin")
                    Image:
                        id: img1
                        center_x: self.parent.center_x
                        height: root.height/14
                        source: "img\pin.png"

                MenuButton:
                    pos_hint: {"center_x": .5, "y": 0}
                    height: self.parent.height
                    on_press: self.menuButtonPressed("alarms")
                    Image:
                        id: img2
                        center_x: self.parent.center_x
                        height: root.height/14
                        source: "img\\alarm.png"

                MenuButton:
                    pos_hint: {"right": 7/8, "y": 0}
                    height: self.parent.height
                    on_release: self.menuButtonPressed("settings")
                    Image:
                        id: img3
                        center_x: self.parent.center_x
                        height: root.height/14
                        source: "img\settings.png"

        AlarmsScreen:
            id: alarms_screen
            name: "alarms"
            manager: "screen_manager"

            CornerButton:
                pos_hint: {"right": 1, "top": 1}
                on_release: self.menuButtonPressed("close")

                Image:
                    height: root.height/16
                    source: "img\close.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y

        SettingsScreen:
            id: settings_screen
            name: "settings"
            manager: "screen_manager"

            CornerButton:
                pos_hint: {"x": 0, "top": 1}
                on_release: self.menuButtonPressed("exit")

                Image:
                    height: root.height/16
                    source: "img\exit.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y

            CornerButton:
                pos_hint: {"right": 1, "top": 1}
                on_release: self.menuButtonPressed("close")

                Image:
                    height: root.height/16
                    source: "img\close.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y

            StackLayout:
                size_hint: (None, None)
                size: root.width-150, root.height-150
                orientation: "tb-lr"
                center_x: self.parent.center_x
                center_y: self.parent.center_y

                Switch:
                    id: setting_24hr
                    size: 83, 32
                    size_hint: (None, None)
                    active: app.config.get("main_screen", "24hr") == "True"
                    on_active: app.config.set("main_screen", "24hr", self.active)

                    Label:
                        text: "24-hour mode"
                        # fix for label text overlapping bounds
                        size_hint: (None, None)
                        text_size: None, None
                        size: self.texture_size
                        x: 165 # TODO: better solution for when they are stacked in two columns
                        center_y: self.parent.center_y

                Switch:
                    id: setting_seconds
                    size: 83, 32
                    size_hint: (None, None)
                    active: app.config.get("main_screen", "seconds") == "True"
                    on_active: app.config.set("main_screen", "seconds", self.active)

                    Label:
                        text: "Show seconds"
                        # fix for label text overlapping bounds
                        size_hint: (None, None)
                        text_size: None, None
                        size: self.texture_size
                        x: 165
                        center_y: self.parent.center_y

                Label:
                    size_hint: (None, None)
                    text_size: None, None
                    size: self.texture_size
                    text: "\nBackground images courtesy of Unsplash.\nImage search terms: (,=AND  ;=OR)"

                KeywordInput:
                    size: 200, 32
                    size_hint: (None, None)
                    multiline: False
                    text: app.config.get("main_screen", "img_keywords")
                    on_text: app.config.set("main_screen", "img_keywords", self.text if not self.text == "" else "nature")

                # TODO: attribution for current image


<MenuButton@CustomButton>:
    size_hint: (1/4, None)
    background_down: ""
    background_color: (1, 1, 1, 0)  if self.state == "normal" else (1, 1, 1, 0.1)

<CornerButton@CustomButton>:
    size: 50, 50
    size_hint: (None, None)
    background_down: ""
    background_color: (1, 1, 1, 0)  if self.state == "normal" else (1, 1, 1, 0.1)
